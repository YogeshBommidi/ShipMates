generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id          String       @id @default(auto()) @map("_id") @db.ObjectId
    name        String?
    email       String       @unique
    image       String?
    ownedLoads  Loads[]      @relation("LoadOwner")
    ownedTrucks Trucks[]     @relation("TruckOwner")
    truckPrice  TruckPrice[] @relation("TruckPriceOwner")
}

model Loads {
    id          String       @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    description String
    price       Int
    fromAddress String
    toAddress   String
    image       String
    userEmail   String
    LoadOwner   User         @relation("LoadOwner", fields: [userEmail], references: [email])
    truckPrices TruckPrice[]
    isBooked    Boolean      @default(false)
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

model Trucks {
    id            String       @id @default(auto()) @map("_id") @db.ObjectId
    driverName    String
    truckEmail    String
    TruckOwner    User         @relation("TruckOwner", fields: [truckEmail], references: [email])
    license       String       @unique
    truckCapacity Int
    favLoads      String[]     @db.ObjectId
    bookedLoads   Json[]
    truckPrice    TruckPrice[]
}

model TruckPrice {
    id              String @id @default(auto()) @map("_id") @db.ObjectId
    load            Loads  @relation(fields: [loadId], references: [id])
    loadId          String @db.ObjectId
    truck           Trucks @relation(fields: [truckId], references: [id])
    truckId         String @db.ObjectId
    truckPriceEmail String
    TruckPriceOwner User   @relation("TruckPriceOwner", fields: [truckPriceEmail], references: [email])
    quotedPrice     Int

    @@unique(fields: [loadId, truckId])
    @@index([loadId], name: "loadId_index")
}
